exec killall waybar # kill all waybars from previous session

# Variables
set $mod Mod1
set $win Mod4
set $lock ~/.config/sway/lock.sh
set $power ~/.config/rofi/modi/power
set $wifi ~/.config/rofi/modi/nmcli
set $term konsole
# Bar control
#
bindsym Mod1+i exec killall waybar
bindsym Mod1+o exec waybar



set $left h
set $right l
set $up k
set $down j
#original launcher menu
#set $menu rofi -m $(expr $(swaymsg -t get_tree | jq '.nodes | map([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | index(true)') - 1) -show drun -run-command 'swaymsg exec -- {cmd}'


#bemenu
set $menu bemenu-run -ibf -H 33 --nb=#000000 --tb=#000000 --fb=#000000
#dmenu
#set $menu dmenu-run

#sway-launcher-dektop set her
#for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10
#set $menu exec $term --class=launcher -e sway-launcher-desktop


#added space as option to launch
bindsym $mod+space exec $menu

set $screenshot grim ~/Images/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $screenclip slurp | grim -g - ~/Images/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png

#set background
set $background /home/atli/Pictures/Wallpapers/Black.png
set $cl_high #ffffff
set $cl_indi #8888ff
set $cl_back #000000
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indicator     childborder
client.focused          $cl_high $cl_back $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

# 
# 
# workspaces
set $ws1   1:1  
set $ws2   2:2  
set $ws3   3:3
set $ws4   4:4
set $ws5   5:5
set $ws6   6:6
set $ws7   7:7
set $ws8   8:8
set $ws9   9:9
set $ws0   10:10
set $wsF1  11:
set $wsF2  12:
set $wsF3  13:13
set $wsF4  14:14
set $wsF5  15:15
set $wsF6  16:16
set $wsF7  17:17
set $wsF8  18:
set $wsF9  19:19
set $wsF10 20:20
set $wsF11 21:
set $wsF12 22:

# Font
font pango: noto Sans 8 

# Window borders
default_border pixel 2
default_floating_border normal
hide_edge_borders smart

#smart_gaps on
gaps inner 10 
gaps outer 5


# Autostart
# exec google-chrome-stable
exec libinput-gestures

# Input configuration
#input * {
#    xkb_layout en
    #xkb_variant nodeadkeys
    #xkb_options caps:swapescape
#}

# Output configuration

#set $background #000000
output * bg $background fill

# Default workspaces for common programs
assign [class="^konsole$"] $ws3
assign [class="^discord$"] $ws5
assign [class="^nautilus$"] $ws4
#assign [app_id="virt-manager"] $wsF8
#assign [class="^Mailspring$"] $wsF2
#assign [class="^KeePass2$"] $wsF11
#assign [class="^Spotify$"] $wsF12

# Shortcuts
bindsym $mod+Return exec $term
bindsym $mod+Print exec $screenshot
bindsym $mod+Shift+Print exec $screenclip
bindsym $mod+d exec $menu
bindsym $mod+c exec google-chrome-stable -enable-features=UseOzonePlatform -ozone-platform=wayland
 

bindsym $mod+Shift+q kill
bindsym $mod+Shift+c reload
#bindsym $mod+Shift+e exit
bindsym $mod+b splith
bindsym $mod+v splitv
bindsym $mod+q split toggle
#bindsym $mod+l exec $lock
bindsym $mod+Escape exec $power
#bindsym $mod+End exec $wifi

# Notifications
bindsym Control+Space exec makoctl dismiss
bindsym Control+Shift+Space exec makoctl dismiss --all

# Multimedia

#test 
bindsym XF86AudioRaiseVolume exec amixer set Master 10%+
bindsym XF86AudioLowerVolume exec amixer set Master 10%-
# for debug only
bindsym XF86AudioMute exec amixer set Master 0%
#bindsym XF86AudioRaiseVolume exec echo "up" > /tmp/volume.log
#bindsym XF86AudioLowerVolume exec echo "down" > /tmp/volume.log


bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous

# Brightness controls
#bindsym --locked XF86MonBrightnessUp exec light -A 10
#bindsym --locked XF86MonBrightnessDown exec light -U 10

bindsym XF86MonBrightnessUp exec light -A 10
bindsym XF86MonBrightnessDown exec light -U 10

#bindsym XF86MonBrightnessUp exec echo "yeet" >> /tmp/skrrt.test

# Toggle Redshift
bindsym $mod+Home exec pkill -USR1 redshift

# Idle configuration
#exec swayidle \
#    timeout 300 'exec $lock' \
#    timeout 600 'swaymsg "output * dpms off"' \
#    after-resume 'swaymsg "output * dpms on"' \
#    before-sleep 'exec $lock'

# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Right focus right
#other keys
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#other keys
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# switch to workspace
bindsym $mod+1   workspace $ws1
bindsym $mod+2   workspace $ws2
bindsym $mod+3   workspace $ws3
bindsym $mod+4   workspace $ws4
bindsym $mod+5   workspace $ws5
bindsym $mod+6   workspace $ws6
bindsym $mod+7   workspace $ws7
bindsym $mod+8   workspace $ws8
bindsym $mod+9   workspace $ws9
bindsym $mod+0   workspace $ws0
bindsym $mod+F1  workspace $wsF1
bindsym $mod+F2  workspace $wsF2
bindsym $mod+F3  workspace $wsF3
bindsym $mod+F4  workspace $wsF4
bindsym $mod+F5  workspace $wsF5
bindsym $mod+F6  workspace $wsF6
bindsym $mod+F7  workspace $wsF7
bindsym $mod+F8  workspace $wsF8
bindsym $mod+F9  workspace $wsF9
bindsym $mod+F10 workspace $wsF10
bindsym $mod+F11 workspace $wsF11
bindsym $mod+F12 workspace $wsF12

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace $ws1
bindsym $mod+Shift+2    move container to workspace $ws2
bindsym $mod+Shift+3    move container to workspace $ws3
bindsym $mod+Shift+4    move container to workspace $ws4
bindsym $mod+Shift+5    move container to workspace $ws5
bindsym $mod+Shift+6    move container to workspace $ws6
bindsym $mod+Shift+7    move container to workspace $ws7
bindsym $mod+Shift+8    move container to workspace $ws8
bindsym $mod+Shift+9    move container to workspace $ws9
bindsym $mod+Shift+0    move container to workspace $ws0
bindsym $mod+Shift+F1   move container to workspace $wsF1
bindsym $mod+Shift+F2   move container to workspace $wsF2
bindsym $mod+Shift+F3   move container to workspace $wsF3
bindsym $mod+Shift+F4   move container to workspace $wsF4
bindsym $mod+Shift+F5   move container to workspace $wsF5
bindsym $mod+Shift+F6   move container to workspace $wsF6
bindsym $mod+Shift+F7   move container to workspace $wsF7
bindsym $mod+Shift+F8   move container to workspace $wsF8
bindsym $mod+Shift+F9   move container to workspace $wsF9


# Layout stuff:

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# Swap focus between the tiling area and the floating area
#bindsym $mod+space focus mode_toggle

# move focus to the parent container
bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Modes
mode "resize" {
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px


    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec systemctl suspend, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    


    bindsym Shift+s exec systemctl poweroff -i, mode "default"
    bindsym Shift+r exec systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bar {
	swaybar_command waybar

}

bindsym $mod+Shift+e mode "$mode_system"

#set $lock_bg ~/Pictures/lockscreen.jpg

bindsym $mod+End exec ~/.config/sway/lock.sh 

#wallpaper
output "*" bg "~/Pictures/Wallpapers/15.jpg" fill


bindsym print exec slurp | grim -g - $(xdg-user-dir PICTURES)/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')

#include ~/.config/sway/$(hostname)/*
#
#
for_window [class="^.*"] border pixel 1
default_border pixel 1 
for_window [title="kcalc"] floating enable

exec tail -f /tmp/wobpipe | wob -a bottom


exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1


bindsym $mod+tab workspace back_and_forth
bindsym $mod+p exec nwggrid
